name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  run-tests:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: taskmaster
          POSTGRES_USER: swen610
          POSTGRES_PASSWORD: whowatchesthewatchmen
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U swen610"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python3 -m pip install -qr requirements.txt

    - name: Debug DNS resolution
      run: |
        nslookup postgres  # Check if 'postgres' can be resolved
        ping postgres  # Try to ping the 'postgres' container to check connectivity

    - name: Debug network connectivity
      run: |
        # List Docker networks to see which one the service is using
        docker network ls
        
        # Inspect the network to check which containers are connected
        docker network inspect bridge  # 'bridge' is the default network Docker uses in most cases
      
        
    - name: Configure credentials
      run: cp config/gitlab-credentials.yml config/db.yml

    - name: Check Python version
      run: python3 --version

    - name: Start server
      run: python3 src/server.py &  # Running the server in the background

    - name: Wait for the server to be ready
      run: sleep 3

    - name: Run tests
      run: |
        python3 -m coverage run -m unittest -v
        python3 -m coverage report
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
